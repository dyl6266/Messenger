<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 서블릿에서 이용되는 컨텍스트 -->
	<!-- 여기서 정의된 bean은 다른 서블릿 컨텍스트와 공유할 수 없음 -->
	<!-- Controller와 관련된 bean은 이 파일에 설정 -->

	<!-- 애너테이션을 사용 가능하도록 해주는 설정 -->
	<annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <beans:property name="favorPathExtension" value="false" />
	    <!-- 아래 두 개는 필요한건지(?).. 없어도 작동엔 문제 없음 -->
	    <beans:property name="favorParameter" value="true" />
    	<beans:property name="ignoreAcceptHeader" value="false" />
	</beans:bean>

	<!-- AspectJ 라이브러리를 통해 Proxy 객체를 생성하는 용도로 사용 -->
	<aop:aspectj-autoproxy />

	<!-- AOP 객체 생성 -->
	<beans:bean id="loggerAspect" class="com.dy.common.LoggerAspect" />

	<!-- 정적 리소스 파일 경로 매핑 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- jsp 파일의 접두사/접미사 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 메시지 컨버터 설정(?).. 어떻게 .. -->
	<!-- <mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <property name="supportedMediaTypes">
	                <list>
	                    <value>text/plain;charset=UTF-8</value>
	                    <value>text/html;charset=UTF-8</value>
	                    <value>application/json;charset=UTF-8</value>
	                </list>
	            </property>
	        </bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->

	<!-- Interceptor 객체 생성 -->
	<!-- Interceptor는 Dispatcher-Servlet과 같은 위치에 등록이 되어 있어야만 정상 작동함 -->
	<beans:bean id="loggerInterceptor" class="com.dy.common.LoggerInterceptor" />
	<!-- Interceptor 설정 -->
	<interceptors>
		<interceptor>
			<!-- 인터셉터를 거치는 URI 패턴 -->
			<mapping path="/**" />
			<!-- 인터셉터를 거치지 않고 예외 시킬 URI -->
			<exclude-mapping path="/login.do" />

			<!-- reference 하지 않고, 바로 사용해도 문제 없음 -->
			<beans:ref bean="loggerInterceptor" />
		</interceptor>
	</interceptors>

	<!-- jsonView 설정 (jackson 라이브러리를 주석처리 해둬서 사용 불가) -->
	<!-- <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8" />
	</beans:bean> -->

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>

	<!-- 해당 패키지 안의 클래스들을 스캔하고 bean 인스턴스를 생성하는 역할 -->
	<!-- @Controller, @Service, @Repository, @Component 애너테이션을 사용했을 때, component-scan을 통해 스프링이 자동적으로 bean으로 등록 -->
	<!-- use-default-filters 속성을 false로 설정하면 이와 같은 애너테이션을 자동으로 검색하지 않음 -->
	<context:component-scan base-package="com.dy" use-default-filters="true">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

</beans:beans>
